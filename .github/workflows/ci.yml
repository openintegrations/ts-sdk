name: CI
on:
  push:
    branches-ignore:
      - 'generated'
      - 'codegen/**'
      - 'integrated/**'
      - 'stl-preview-head/**'
      - 'stl-preview-base/**'

jobs:
  lint:
    timeout-minutes: 10
    name: lint
    runs-on: ${{ github.repository == 'stainless-sdks/openint-typescript' && 'depot-ubuntu-24.04' || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Bootstrap
        run: ./scripts/bootstrap

      - name: Check types
        run: ./scripts/lint

  build:
    timeout-minutes: 5
    name: build
    runs-on: ${{ github.repository == 'stainless-sdks/openint-typescript' && 'depot-ubuntu-24.04' || 'ubuntu-latest' }}
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Bootstrap
        run: ./scripts/bootstrap

      - name: Check build
        run: ./scripts/build

      - name: Commit openint/connect patch version upgrade and push yarn.lock
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          echo "Attempting to upgrade @openint/connect..."
          yarn upgrade @openint/connect

          echo "Checking for changes in yarn.lock..."
          if git diff --quiet HEAD -- yarn.lock; then
             echo "yarn.lock unchanged. No commit needed."
             exit 0
          fi

          echo "yarn.lock has changed. Committing and pushing..."
          git add yarn.lock
          git commit -m "chore: auto-update openint/connect patch from CI" -m "Package: @openint/connect" -m "[skip ci]"

          echo "Pushing changes..."
          git push origin HEAD
          echo "yarn.lock pushed successfully."

      - name: Get GitHub OIDC Token
        if: github.repository == 'stainless-sdks/openint-typescript'
        id: github-oidc
        uses: actions/github-script@v6
        with:
          script: core.setOutput('github_token', await core.getIDToken());

      - name: Upload tarball
        if: github.repository == 'stainless-sdks/openint-typescript'
        env:
          URL: https://pkg.stainless.com/s
          AUTH: ${{ steps.github-oidc.outputs.github_token }}
          SHA: ${{ github.sha }}
        run: ./scripts/utils/upload-artifact.sh
  test:
    timeout-minutes: 10
    name: test
    runs-on: ${{ github.repository == 'stainless-sdks/openint-typescript' && 'depot-ubuntu-24.04' || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Bootstrap
        run: ./scripts/bootstrap

      - name: Run tests
        run: ./scripts/test
